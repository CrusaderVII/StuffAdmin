version: '3'

services:
  database:
    container_name: postgres_stuffadmin
    image: postgres:alpine3.18
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      backend:
        aliases:
            - "database"

  stuff-service:
    container_name: stuff-service
    image: stuff-service:latest
    build:
      context: StuffService
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/stuffadmin
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    depends_on:
      - discovery-service
      - database
      - config-service
    networks:
      - backend

  recruiting-service:
    container_name: recruiting-service
    image: recruiting-service:latest
    build:
      context: RecruitingService
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/stuffadmin_recruiting
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8081:8081"
    depends_on:
      - discovery-service
      - database
      - config-service
    networks:
      - backend

  discovery-service:
    container_name: discovery-service
    image: discovery-service:latest
    build:
      context: DiscoveryService
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      backend:
        aliases:
          - "discovery"

  config-service:
    container_name: config-service
    image: config-service:latest
    build:
      context: ConfigService
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      backend:
        aliases:
          - "config"

  cloud-storage-service:
    container_name: cloud-storage-service
    image: cloud-storage-service:latest
    build:
      context: CloudStorageService
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    networks:
      - backend

  gateway-service:
    container_name: gateway-service
    image: gateway-service:latest
    build:
      context: GatewayService
      dockerfile: Dockerfile
    ports:
      - "8072:8072"
    networks:
      - backend

networks:
  backend:
    driver: bridge